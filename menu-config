#!/bin/bash
# RASPBERRY PI IMAGE BUILDER
# SYSTEM MENU INTERFACE
DISTRO=`cat /etc/os-release | grep -w NAME | sed 's/NAME=//g' | sed 's/"//g' | sed 's/ GNU\/Linux//g'`
if [[ -f "/etc/opt/board.txt" ]]; then
	. /etc/opt/board.txt
else
	export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
	whiptail --msgbox "    Your board is not supported." 0 0
	exit 0
fi

# functions
change_password (){
while true; do
	export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray';
	PASSWD1=$(whiptail --backtitle "${DISTRO}: User Password" --title "User: $USER" --passwordbox "Enter new password" --nocancel 8 78 3>&1 1>&2 2>&3)
	if [[ ! -z "$PASSWD1" ]]; then
		:;
	else
		export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
		whiptail --backtitle "" --msgbox "    Field is blank? Try again." 0 0
		continue
	fi
	PASSWD2=$(whiptail --backtitle "${DISTRO}: User Password" --title "User: $USER" --passwordbox "Enter new password (again)" --nocancel 8 78 3>&1 1>&2 2>&3)
	if [ "$PASSWD1" = "$PASSWD2" ]; then
		PASSWORD="${PASSWD1}"
		export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
		if (whiptail --backtitle "${DISTRO}: User Password: Confirm" --title "Confirm" --yesno "    Set the new password?" 0 0); then
			echo "$PASSWORD" | sed 's/.*/\0\n\0/' | sudo passwd -q $USER 2> /dev/null
			whiptail --backtitle "${DISTRO}: User Password: Confirmation" --title "Confirmation" --msgbox "    Password changed successfully." 0 0
		else
			whiptail --title "Cancelled" --msgbox "    Hit enter to return to menu." 0 0
		fi
	else
		export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
		whiptail --backtitle "" --msgbox "    Passwords don't match? Try again." 0 0
		continue
	fi
	break
	clear -x
done
}

change_sudo (){
if [[ "$SUDOERS" == "true" ]]; then STATUS="enabled"; else STATUS="disabled"; fi
CONFIRM=`echo "${STATUS}" | sed -e "s/\b\(.\)/\u\1/g"`
US_QUESTION=`echo "${STATUS}" | sed -e "s/\b\(.\)/\u\1/g" | sed 's/d//g'`
export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
if (whiptail --backtitle "Sudo: $US_QUESTION Security" --title "Confirm" --yesno "    $US_QUESTION require password?" 0 0); then
	if [[ $SUDOERS == "true" ]]; then
		sudo rm -f /etc/sudoers.d/010_${USER}-nopasswd
	else
		echo "$USER ALL=(ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/010_${USER}-nopasswd
	fi
	whiptail --backtitle "Sudo: $CONFIRM Security" --title "Confirmation" --msgbox "    $CONFIRM successfully." 0 0;
else
	whiptail --title "Cancelled" --msgbox "    Hit enter to return to menu." 0 0;
fi
}

user_security (){
USERNAME=`echo "${USER}" | sed -e "s/\b\(.\)/\u\1/g"`
if [[ -f "/etc/sudoers.d/010_$USER-nopasswd" ]]; then
	SUDOERS="true"
	STATUS="disabled"
else
	SUDOERS="false"
	STATUS="enabled"
fi
while [ 1 ]
do
SECURITY=$(
export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
whiptail --backtitle "Security Settings: $USERNAME" --title "Choose" --menu "" --nocancel 0 0 0 \
	"1)" "Password          Change user password" \
	"2)" "Sudo              Require password (${STATUS})" \
	"E)" "Exit .." 3>&2 2>&1 1>&3
)
case $SECURITY in
	"1)")
		change_password
		;;
	"2)")
		change_sudo
		break
		;;
	"E)")
		clear -x
		break
		;;
	esac
done
}

change_hostname (){
CURRENT_HOSTNAME=`cat /etc/hostname | sed -n '1p'`
export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
NEWHOST=$(whiptail --backtitle "${DISTRO}: Hostname" --title "Current: $CURRENT_HOSTNAME" --inputbox "Enter new hostname" --nocancel 8 78 3>&1 1>&2 2>&3)
HOSTNAME="${NEWHOST}"
export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
if (whiptail --backtitle "Hostname: Confirm" --title "Confirm" --yesno "    Apply new hostname? ${HOSTNAME}" 0 0); then
	sudo sed -i "s/${CURRENT_HOSTNAME}/${HOSTNAME}/g" /etc/hostname
	sudo sed -i "s/${CURRENT_HOSTNAME}/${HOSTNAME}/g" /etc/hosts
	if [[ "$DISTRO" == "Devuan" ]]; then
		sudo service hostname.sh --full-restart
		sudo service avahi-daemon restart
	else
		sudo hostnamectl set-hostname $HOSTNAME
		sudo systemctl restart avahi-daemon
	fi
	whiptail --backtitle "Hostname: Confirmation" --title "Confirmation" --msgbox "    ${HOSTNAME} applied successfully." 0 0
else
	whiptail --title "Cancelled" --msgbox "    Hit enter to return to menu." 0 0
fi
clear -x
}

# main menu
while [ 1 ]
do
CHOICE=$(
export NEWT_COLORS='root=,black roottext=lightgray,black title=black,lightgray'
whiptail --backtitle "${DISTRO}: System Settings" --title "Menu Config" --menu "" --nocancel 0 25 0 \
	"N)" "Networking        Configure network interfaces" \
	"" "" \
	"1)" "Security          User security management" \
	"2)" "Hostname          System hostname" \
	"3)" "Keyboard          Keyboard layout" \
	"4)" "Locales           Language settings" \
	"5)" "Timezone          Regional settings" \
	"6)" "Console           Font and keymap setup" \
	"7)" "Governor          Dynamic frequency scaling" \
	"" "" \
	"K)" "Kernel            Edit the config.txt" \
	"U)" "Update            Menu interface configuration tool" \
	"Q)" "Quit .." 3>&2 2>&1 1>&3
)
case $CHOICE in
	"N)")
		if [[ `command -v nmtui` ]]; then sudo nmtui; else swh -m; fi
		;;
	"")
		;;
	"1)")
		user_security
		;;
	"2)")
		change_hostname
		;;
	"3)")
		sudo dpkg-reconfigure keyboard-configuration
		;;
	"4)")
		sudo dpkg-reconfigure locales
		;;
	"5)")
		sudo dpkg-reconfigure tzdata
		;;
	"6)")
		sudo dpkg-reconfigure console-setup
		if [[ "$DISTRO" == "Devuan" ]]; then
			sudo service console-setup.sh restart
		else
			sudo service console-setup restart
		fi
		;;
	"7)")
		governor -m
		;;
	"")
		;;
	"K)")
		sudo nano /boot/broadcom/config.txt
		;;
	"U)")
		MENUDIR="/usr/local/bin"
		if [[ `curl -I https://github.com 2>&1 | grep 'HTTP/2 200'` ]]; then
			if [[ `command -v menu-config-update` ]]; then sudo mv -f ${MENUDIR}/menu-config-update ${MENUDIR}/menu-config-update.orig; fi
			sudo wget -cq https://raw.githubusercontent.com/pyavitz/rpi-img-builder/menuconfig/menu-config-update -P ${MENUDIR}/
			sleep .50
			sudo chmod +x $(command -v menu-config-update)
			if [[ `command -v menu-config-update` ]]; then
				sudo rm -f ${MENUDIR}/menu-config-update.orig
			else
				sudo mv -f ${MENUDIR}/menu-config-update.orig ${MENUDIR}/menu-config-update
			fi
			menu-config-update
			exit 0
		else
			echo -e "The script requires an internet connection."
			read -p "Enter to continue"
		fi
		;;
	"Q)")
		echo "Program terminated."
		exit 0
		;;
	esac
done
